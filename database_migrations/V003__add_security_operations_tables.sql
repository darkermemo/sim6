-- V003: Security Operations tables
-- Creates rules, alerts, cases, and case_evidence tables for security operations

-- Rules table: Stores detection rules for generating alerts
CREATE TABLE IF NOT EXISTS dev.rules (
    rule_id String,
    tenant_id String,
    rule_name String,
    rule_description String,
    rule_query String,
    is_active UInt8 DEFAULT 1,
    is_stateful UInt8 DEFAULT 0,
    stateful_config String DEFAULT '',
    engine_type String DEFAULT 'scheduled',
    created_at UInt32
) ENGINE = MergeTree()
ORDER BY (tenant_id, rule_id);

-- Alerts table: Stores security alerts generated by rules
CREATE TABLE IF NOT EXISTS dev.alerts (
    alert_id String,
    tenant_id String,
    rule_id String,
    rule_name String,
    event_id String,
    alert_timestamp UInt32,
    severity LowCardinality(String),
    status LowCardinality(String) DEFAULT 'open',
    created_at UInt32
) ENGINE = MergeTree()
ORDER BY (tenant_id, alert_timestamp);

-- Cases table: Stores investigation cases
CREATE TABLE IF NOT EXISTS dev.cases (
    case_id String,
    tenant_id String,
    case_title String,
    case_description String,
    status String DEFAULT 'open',
    priority String,
    assigned_to String,
    created_at UInt32,
    updated_at UInt32
) ENGINE = MergeTree()
ORDER BY (tenant_id, created_at, case_id);

-- Case evidence table: Links evidence (events/alerts) to cases
CREATE TABLE IF NOT EXISTS dev.case_evidence (
    case_id String,
    evidence_type String,
    evidence_id String,
    added_at UInt32
) ENGINE = MergeTree()
ORDER BY (case_id, added_at);