[package]
name = "siem_unified_pipeline"
version = "0.1.0"
edition = "2021"
authors = ["Your Name <your.email@example.com>"]
license = "MIT"
description = "A high-performance, enterprise-grade SIEM pipeline built in Rust"
homepage = "https://github.com/your-org/siem-unified-pipeline"
repository = "https://github.com/your-org/siem-unified-pipeline"
readme = "README.md"
keywords = ["siem", "security", "logging", "analytics", "monitoring"]
categories = ["network-programming", "web-programming", "database"]
rust-version = "1.70"
autobins = false

[lib]
name = "siem_unified_pipeline"
path = "src/lib.rs"

[[bin]]
name = "siem-pipeline"
path = "src/main.rs"

[dependencies]
# Async runtime
tokio = { version = "1.35", features = ["full"] }
tokio-util = { version = "0.7", features = ["full"] }
tokio-stream = "0.1"
futures = "0.3"
futures-util = "0.3"
async-trait = "0.1"
async-stream = "0.3"

# Web framework
axum = { version = "0.7", features = ["ws", "multipart", "macros"] }
tower = { version = "0.4", features = ["full"] }
tower-http = { version = "0.5", features = ["full"] }
hyper = { version = "1.0", features = ["full"] }
reqwest = { version = "0.11", features = ["json", "rustls-tls"], default-features = false }

# Serialization
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
serde_yaml = "0.9"
toml = "0.8"
bincode = "1.3"

# Database
clickhouse = { version = "0.13.3", features = ["inserter"] }
redis = { version = "0.24", features = ["tokio-comp", "connection-manager", "streams"] }

# Time and UUID
chrono = { version = "0.4", features = ["serde"] }
uuid = { version = "1.6", features = ["v4", "serde"] }

# Logging and tracing
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter", "json"] }
tracing-appender = "0.2"
log = "0.4"

# Error handling
thiserror = "1.0"
anyhow = "1.0"

# Configuration
config = "0.14"
clap = { version = "4.4", features = ["derive", "env"] }

# Security
jsonwebtoken = "9.2"
bcrypt = "0.15"
totp-rs = "5.4"
ring = "0.17"
base64 = "0.21"
base32 = "0.4"
rand = "0.8"

# Metrics and monitoring
prometheus = { version = "0.13", features = ["process"] }
metrics = "0.22"
metrics-prometheus = "0.6"

# Networking
kafka = "0.10"
rdkafka = { version = "0.36", features = ["cmake-build", "ssl-vendored", "gssapi-vendored"] }

# Data processing
regex = "1.10"
once_cell = "1.19"
dashmap = "5.5"
parking_lot = "0.12"
rayon = "1.8"
crossbeam = "0.8"
num_cpus = "1.0"

# Compression
flate2 = "1.0"
lz4_flex = "0.11"
zstd = "0.13"

# File handling
notify = "6.1"
walkdir = "2.4"
globset = "0.4"

# Network protocols
syslog_loose = "0.20"
pcap = { version = "1.3", optional = true }

# GeoIP
maxminddb = { version = "0.24", optional = true }

# Machine Learning (optional)
candle-core = { version = "0.3", optional = true }
candle-nn = { version = "0.3", optional = true }
candle-transformers = { version = "0.3", optional = true }


# AWS SDK
aws-config = { version = "1.0", optional = true }
aws-sdk-s3 = { version = "1.0", optional = true }

# Validation
validator = { version = "0.16", features = ["derive"] }

# Rate limiting
governor = "0.6"

# Memory management
bytes = "1.5"

# Hashing
sha2 = "0.10"
blake3 = "1.5"

[dev-dependencies]
tokio-test = "0.4"
criterion = { version = "0.5", features = ["html_reports"] }
proptest = "1.4"
mockall = "0.12"
wiremock = "0.5"
tempfile = "3.8"
test-log = "0.2"
env_logger = "0.10"

[features]
default = []
legacy = []

# Legacy features (kept for compatibility; gated behind `legacy`)
alerts = []
system = []
metrics_legacy = []
pg_layer = []

# Optional features
geoip = ["maxminddb"]
pcap-support = ["pcap"]
ml = ["candle-core", "candle-nn", "candle-transformers"]

aws = ["aws-config", "aws-sdk-s3"]
web-ui = []
plugin-system = []

# Performance features
simd = []
jemalloc = ["tikv-jemallocator"]

[dependencies.tikv-jemallocator]
version = "0.5"
optional = true



[profile.release]
opt-level = 3
lto = true
codegen-units = 1
panic = "abort"
strip = true

[profile.dev]
opt-level = 0
debug = true
split-debuginfo = "unpacked"

[profile.test]
opt-level = 1
debug = true

[profile.bench]
opt-level = 3
lto = true
codegen-units = 1
debug = false

# Package metadata
[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]

[package.metadata.cargo-machete]
ignored = ["tikv-jemallocator"]

# Build script configuration
[build-dependencies]
vergen = { version = "8.2", features = ["build", "cargo", "git", "gitcl", "rustc"] }

# Example configurations
# Examples removed - files not present