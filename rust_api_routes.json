{
  "routes": [
    {
      "method": "GET",
      "path": "/api/v1/db/pool",
      "handler": "db_pool_health",
      "file": "siem_clickhouse_ingestion/src/receiver.rs",
      "line": 276,
      "context": [
        "Router::new()",
        ".route(\"/health\", get(health_check))",
        ".route(\"/api/v1/db/pool\", get(db_pool_health))",
        ".route(\"/metrics\", get(metrics_handler))",
        ".route(\"/debug/:tid\", get(|Path(tid): Path<String>| async move { format!(\"OK:{tid}\") }))"
      ]
    },
    {
      "method": "GET",
      "path": "/api/v1/db/pool",
      "handler": "db_pool_health",
      "file": "siem_clickhouse_ingestion/src/receiver.rs",
      "line": 276,
      "context": [
        "Router::new()",
        ".route(\"/health\", get(health_check))",
        ".route(\"/api/v1/db/pool\", get(db_pool_health))",
        ".route(\"/metrics\", get(metrics_handler))",
        ".route(\"/debug/:tid\", get(|Path(tid): Path<String>| async move { format!(\"OK:{tid}\") }))"
      ]
    },
    {
      "method": "GET",
      "path": "/api/v1/events/search",
      "handler": "search_events",
      "file": "src/handlers/events.rs",
      "line": 606,
      "context": [
        "/// Create router for events endpoints",
        "pub fn create_events_router() -> Router {",
        "Router::new().route(\"/api/v1/events/search\", get(search_events))",
        "}",
        ""
      ]
    },
    {
      "method": "GET",
      "path": "/api/v1/events/search",
      "handler": "search_events",
      "file": "src/handlers/events.rs",
      "line": 606,
      "context": [
        "/// Create router for events endpoints",
        "pub fn create_events_router() -> Router {",
        "Router::new().route(\"/api/v1/events/search\", get(search_events))",
        "}",
        ""
      ]
    },
    {
      "method": "GET",
      "path": "/api/v1/events/search",
      "handler": "search_events",
      "file": "src/handlers/events.rs",
      "line": 606,
      "context": [
        "/// Create router for events endpoints",
        "pub fn create_events_router() -> Router {",
        "Router::new().route(\"/api/v1/events/search\", get(search_events))",
        "}",
        ""
      ]
    },
    {
      "method": "GET",
      "path": "/health",
      "handler": "health_check",
      "file": "siem_clickhouse_ingestion/src/receiver.rs",
      "line": 275,
      "context": [
        "",
        "Router::new()",
        ".route(\"/health\", get(health_check))",
        ".route(\"/api/v1/db/pool\", get(db_pool_health))",
        ".route(\"/metrics\", get(metrics_handler))"
      ]
    },
    {
      "method": "GET",
      "path": "/health",
      "handler": "health_check",
      "file": "siem_unified_pipeline/src/handlers.rs",
      "line": 224,
      "context": [
        "let api_v1_router = Router::new()",
        "// Health and status endpoints",
        ".route(\"/health\", get(health_check))",
        ".route(\"/health/detailed\", get(detailed_health_check))",
        ".route(\"/status\", get(system_status))"
      ]
    },
    {
      "method": "GET",
      "path": "/health",
      "handler": "health_check",
      "file": "siem_unified_pipeline/src/handlers.rs",
      "line": 372,
      "context": [
        ".nest(\"/api/v1\", api_v1_router)",
        "// Keep legacy routes for backward compatibility",
        ".route(\"/health\", get(health_check))",
        ".route(\"/metrics\", get(get_metrics))",
        ".route(\"/events/ingest\", post(ingest_single_event))"
      ]
    },
    {
      "method": "GET",
      "path": "/metrics",
      "handler": "metrics_handler",
      "file": "siem_clickhouse_ingestion/src/receiver.rs",
      "line": 277,
      "context": [
        ".route(\"/health\", get(health_check))",
        ".route(\"/api/v1/db/pool\", get(db_pool_health))",
        ".route(\"/metrics\", get(metrics_handler))",
        ".route(\"/debug/:tid\", get(|Path(tid): Path<String>| async move { format!(\"OK:{tid}\") }))",
        ".route(\"/tenants/:tenant_id\", get(tenant_info))"
      ]
    },
    {
      "method": "GET",
      "path": "/metrics",
      "handler": "get_metrics",
      "file": "siem_unified_pipeline/src/handlers.rs",
      "line": 230,
      "context": [
        "",
        "// Metrics endpoints",
        ".route(\"/metrics\", get(get_metrics))",
        ".route(\"/metrics/prometheus\", get(get_prometheus_metrics))",
        ".route(\"/metrics/components\", get(get_component_metrics))"
      ]
    },
    {
      "method": "GET",
      "path": "/metrics",
      "handler": "get_metrics",
      "file": "siem_unified_pipeline/src/handlers.rs",
      "line": 373,
      "context": [
        "// Keep legacy routes for backward compatibility",
        ".route(\"/health\", get(health_check))",
        ".route(\"/metrics\", get(get_metrics))",
        ".route(\"/events/ingest\", post(ingest_single_event))",
        ".route(\"/events/search\", get(search_events))"
      ]
    }
  ],
  "analysis": {
    "total_routes": 11,
    "methods": {
      "GET": 11
    },
    "paths": {
      "/api/v1/db/pool": 2,
      "/api/v1/events/search": 3,
      "/health": 3,
      "/metrics": 3
    },
    "handlers": {
      "db_pool_health": 2,
      "search_events": 3,
      "health_check": 3,
      "metrics_handler": 1,
      "get_metrics": 2
    },
    "files": {
      "siem_clickhouse_ingestion/src/receiver.rs": 4,
      "src/handlers/events.rs": 3,
      "siem_unified_pipeline/src/handlers.rs": 4
    }
  },
  "generated_at": "/Users/yasseralmohammed/sim6",
  "scan_timestamp": "auto-generated"
}