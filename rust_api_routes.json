{
  "routes": [
    {
      "method": "GET",
      "path": "/api/v1/version",
      "handler": "version_info",
      "file": "siem_api/src/health_handlers.rs",
      "line": 1,
      "context": [
        "// Version endpoint for siem_api",
        ".route(\"/version\", get(health_handlers::version_info))"
      ]
    },
    {
      "method": "GET",
      "path": "/health",
      "handler": "health_check",
      "file": "siem_api/src/health_handlers.rs",
      "line": 1,
      "context": [
        "// Health endpoint for siem_api",
        ".route(\"/health\", get(health_handlers::health_check))"
      ]
    },
    {
      "method": "GET",
      "path": "/metrics",
      "handler": "get_metrics",
      "file": "siem_api/src/health_handlers.rs",
      "line": 1,
      "context": [
        "// Metrics endpoint for siem_api",
        ".route(\"/metrics\", get(health_handlers::get_metrics))"
      ]
    },
    {
      "method": "GET",
      "path": "/health",
      "handler": "health_check",
      "file": "siem_clickhouse_ingestion/src/receiver.rs",
      "line": 215,
      "context": [
        "",
        "Router::new()",
        ".route(\"/health\", get(health_check))",
        ".route(\"/metrics\", get(metrics_handler))",
        ".route(\"/tenants/:tenant_id\", get(tenant_info))"
      ]
    },
    {
      "method": "GET",
      "path": "/health",
      "handler": "health_check",
      "file": "siem_unified_pipeline/src/handlers.rs",
      "line": 143,
      "context": [
        "let api_v1_router = Router::new()",
        "// Health and status endpoints",
        ".route(\"/health\", get(health_check))",
        ".route(\"/health/detailed\", get(detailed_health_check))",
        ".route(\"/status\", get(system_status))"
      ]
    },
    {
      "method": "GET",
      "path": "/health",
      "handler": "health_check",
      "file": "siem_unified_pipeline/src/handlers.rs",
      "line": 288,
      "context": [
        ".nest(\"/api/v1\", api_v1_router)",
        "// Keep legacy routes for backward compatibility",
        ".route(\"/health\", get(health_check))",
        ".route(\"/metrics\", get(get_metrics))",
        ".route(\"/events/ingest\", post(ingest_single_event))"
      ]
    },
    {
      "method": "GET",
      "path": "/metrics",
      "handler": "metrics_handler",
      "file": "siem_clickhouse_ingestion/src/receiver.rs",
      "line": 216,
      "context": [
        "Router::new()",
        ".route(\"/health\", get(health_check))",
        ".route(\"/metrics\", get(metrics_handler))",
        ".route(\"/tenants/:tenant_id\", get(tenant_info))",
        ".route(\"/ingest/:tenant_id\", post(ingest_logs))"
      ]
    },
    {
      "method": "GET",
      "path": "/metrics",
      "handler": "get_metrics",
      "file": "siem_unified_pipeline/src/handlers.rs",
      "line": 149,
      "context": [
        "",
        "// Metrics endpoints",
        ".route(\"/metrics\", get(get_metrics))",
        ".route(\"/metrics/prometheus\", get(get_prometheus_metrics))",
        ".route(\"/metrics/components\", get(get_component_metrics))"
      ]
    },
    {
      "method": "GET",
      "path": "/metrics",
      "handler": "get_metrics",
      "file": "siem_unified_pipeline/src/handlers.rs",
      "line": 289,
      "context": [
        "// Keep legacy routes for backward compatibility",
        ".route(\"/health\", get(health_check))",
        ".route(\"/metrics\", get(get_metrics))",
        ".route(\"/events/ingest\", post(ingest_single_event))",
        ".route(\"/events/search\", get(search_events))"
      ]
    }
  ],
  "analysis": {
    "total_routes": 6,
    "methods": {
      "GET": 6
    },
    "paths": {
      "/health": 3,
      "/metrics": 3
    },
    "handlers": {
      "health_check": 3,
      "metrics_handler": 1,
      "get_metrics": 2
    },
    "files": {
      "siem_clickhouse_ingestion/src/receiver.rs": 2,
      "siem_unified_pipeline/src/handlers.rs": 4
    }
  },
  "generated_at": "/Users/yasseralmohammed/sim6",
  "scan_timestamp": "auto-generated"
}